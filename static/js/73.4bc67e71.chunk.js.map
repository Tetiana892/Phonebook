{"version":3,"file":"static/js/73.4bc67e71.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","page/ContactsPage/ContactsPage.styled.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  padding-bottom: 30px;\n  border-bottom: 3px solid #aaa;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const LabelInput = styled.label`\n  font-size: 18px;\n  font-weight: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 160px;\n  height: 20px;\n  padding: 5px;\n  border: 1px solid #555;\n  border-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px 20px;\n  margin: 0 auto;\n  margin-top: 30px;\n\n  background-image: linear-gradient(\n    45deg,\n    #4158d0 0%,\n    #c850c0 40%,\n    #ffcc70 90%\n  );\n\n  border: 2px solid #747474;\n  border-radius: 10px;\n  font-weight: 700;\n  color: #ffffff;\n  cursor: pointer;\n  box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #000;\n    background: #9370db;\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContactThunk } from '../../redux/contacts/contacts-requests';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport {\n  FormContainer,\n  InputContainer,\n  LabelInput,\n  Input,\n  Button,\n} from './ContactForm.styled';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const changeName = e => setName(e.target.value);\n  const changeNumber = e => setNumber(e.target.value);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? Notify.warning(`${name} : ${number} is already in contacts`)\n      : dispatch(addContactThunk(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={handlerSubmit}>\n      <InputContainer>\n        <LabelInput>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={changeName}\n            placeholder=\"Enter name\"\n            autoComplete=\"off\"\n          />\n        </LabelInput>\n\n        <LabelInput>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            phonePattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={changeNumber}\n            placeholder=\"Enter phone number\"\n            autoComplete=\"off\"\n          />\n        </LabelInput>\n      </InputContainer>\n\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  &:last-child {\n    margin-bottom: 10px;\n  }\n\n  display: block;\n  padding: 4px 14px;\n\n  background-image: linear-gradient(\n    45deg,\n    #4158d0 0%,\n    #c850c0 40%,\n    #ffcc70 90%\n  );\n  border: 2px solid #747474;\n  border-radius: 10px;\n  font-weight: 700;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 9px 14px 0px rgba(0, 0, 0, 0.75);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #000;\n    background: #9370db;\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from '../../redux/contacts/contacts-requests';\nimport { Item, ItemContainer, Button } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ContactItem({ name, number, contactId }) {\n  const dispatch = useDispatch();\n  const infoDelete = { contactId, name };\n\n  return (\n    <Item>\n      <ItemContainer>\n        <span>{name}: </span>\n        <span>{number}</span>\n\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContactThunk(infoDelete))}\n        >\n          Delete\n        </Button>\n      </ItemContainer>\n    </Item>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 20px 0 0;\n  padding-left: 20px;\n`;\nexport const Error = styled.li`\n  text-align: center;\n  color: #5db09d;\n  list-style: none;\n`;\n","// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from '../../redux/contacts/contacts-requests';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/contacts/contacts-selectors';\nimport ContactItem from '../../components/ContactItem/ContactItem';\nimport { List, Error } from './ContactList.styled';\n\nexport default function ContactList() {\n  const data = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterList = () => {\n    const normalValue = filter.toLowerCase().trim();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalValue)\n    );\n  };\n\n  const contactsList = filterList();\n\n  return (\n    <List>\n      {contactsList.length > 0 ? (\n        contactsList.map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id} name={name} number={number} contactId={id} />\n          );\n        })\n      ) : (\n        <Error>\n          <strong>Oops, nothing</strong>\n        </Error>\n      )}\n    </List>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deleteContact: PropTypes.func,\n// };\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  width: 388px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 20px;\n  padding: 5px;\n  border: 1px solid #555;\n  border-radius: 6px;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 10px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-slice';\nimport { FilterContainer, Input, Text } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => dispatch(filterContact(e.target.value));\n  return (\n    <FilterContainer>\n      <Text>Find contacts by name</Text>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n        placeholder=\"Name\"\n      />\n    </FilterContainer>\n  );\n}\n\n// Filter.propTypes = {\n//   onChange: PropTypes.func,\n// };\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 400px;\n  margin: 40px auto 0;\n  padding: 30px;\n  background-color: #fff;\n  padding-bottom: 30px;\n  border-bottom: 3px solid #aaa;\n  box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.3);\n  border-radius: 6px;\n`;\n\nexport const TitleH = styled.h1`\n  text-align: center;\n  color: #353535;\n  text-shadow: rgba(130, 130, 130, 0.5) 4px 2px 3px;\n`;\n\nexport const TitleH2 = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  color: #353535;\n  text-shadow: rgba(130, 130, 130, 0.5) 4px 2px 3px;\n`;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { Container, TitleH, TitleH2 } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  return (\n    <Container>\n      <TitleH>Contacts book</TitleH>\n      <ContactForm />\n      <TitleH2>Contacts</TitleH2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","FormContainer","styled","InputContainer","LabelInput","Input","Button","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","e","preventDefault","newContact","find","contact","toLowerCase","Notify","addContactThunk","type","pattern","title","required","value","onChange","target","placeholder","autoComplete","phonePattern","Item","ItemContainer","ContactItem","contactId","infoDelete","onClick","deleteContactThunk","List","Error","ContactList","data","useEffect","getContactsThunk","contactsList","normalValue","trim","includes","filterList","length","map","id","FilterContainer","Text","Filter","filterContact","Container","TitleH","TitleH2","ContactsPage"],"sourceRoot":""}